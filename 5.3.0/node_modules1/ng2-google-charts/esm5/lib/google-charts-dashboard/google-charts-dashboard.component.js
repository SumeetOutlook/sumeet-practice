import { __awaiter, __decorate, __generator, __values } from "tslib";
import { Component, ElementRef, OnInit, Input, } from '@angular/core';
import { GoogleChartsLoaderService } from '../google-charts-loader.service';
import { GoogleChartsDataTable } from '../google-charts-datatable';
var GoogleChartsDashboardComponent = /** @class */ (function () {
    function GoogleChartsDashboardComponent(el, loaderService) {
        this.el = el;
        this.loaderService = loaderService;
    }
    GoogleChartsDashboardComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.data.component = this;
        this.init().then(function () {
            if (!_this.dataTable) {
                _this.dataTable = new GoogleChartsDataTable(_this.data);
                _this.dataTable.dataTableChanged.subscribe(function (dt) {
                    _this._draw();
                });
            }
            _this.draw();
        });
    };
    GoogleChartsDashboardComponent.prototype.init = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b, b, controls, charts, controls_1, controls_1_1, c, e_1_1, charts_1, charts_1_1, c, data, e_2_1, e_3_1;
            var e_3, _c, e_1, _d, e_2, _e;
            return __generator(this, function (_f) {
                switch (_f.label) {
                    case 0: return [4 /*yield*/, this.loaderService.load({ packages: ['controls'] })];
                    case 1:
                        _f.sent();
                        this.dashboard = new google.visualization.Dashboard(this.el.nativeElement.querySelector('div'));
                        _f.label = 2;
                    case 2:
                        _f.trys.push([2, 21, 22, 23]);
                        _a = __values(this.data.bind), _b = _a.next();
                        _f.label = 3;
                    case 3:
                        if (!!_b.done) return [3 /*break*/, 20];
                        b = _b.value;
                        controls = b[0];
                        charts = b[1];
                        if (!(controls instanceof Array)) {
                            controls = [controls];
                        }
                        if (!(charts instanceof Array)) {
                            charts = [charts];
                        }
                        _f.label = 4;
                    case 4:
                        _f.trys.push([4, 9, 10, 11]);
                        controls_1 = (e_1 = void 0, __values(controls)), controls_1_1 = controls_1.next();
                        _f.label = 5;
                    case 5:
                        if (!!controls_1_1.done) return [3 /*break*/, 8];
                        c = controls_1_1.value;
                        return [4 /*yield*/, c.component.ensureInit()];
                    case 6:
                        _f.sent();
                        _f.label = 7;
                    case 7:
                        controls_1_1 = controls_1.next();
                        return [3 /*break*/, 5];
                    case 8: return [3 /*break*/, 11];
                    case 9:
                        e_1_1 = _f.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 11];
                    case 10:
                        try {
                            if (controls_1_1 && !controls_1_1.done && (_d = controls_1.return)) _d.call(controls_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7 /*endfinally*/];
                    case 11:
                        _f.trys.push([11, 16, 17, 18]);
                        charts_1 = (e_2 = void 0, __values(charts)), charts_1_1 = charts_1.next();
                        _f.label = 12;
                    case 12:
                        if (!!charts_1_1.done) return [3 /*break*/, 15];
                        c = charts_1_1.value;
                        return [4 /*yield*/, c.component.init()];
                    case 13:
                        _f.sent();
                        data = c.component.data;
                        if (data.dataTable !== undefined || data.dataSourceUrl !== undefined) {
                            throw Error('dataTable and dataSourceUrl cannot be specified when ' +
                                'chart is drawn in a Dashboard');
                        }
                        _f.label = 14;
                    case 14:
                        charts_1_1 = charts_1.next();
                        return [3 /*break*/, 12];
                    case 15: return [3 /*break*/, 18];
                    case 16:
                        e_2_1 = _f.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 18];
                    case 17:
                        try {
                            if (charts_1_1 && !charts_1_1.done && (_e = charts_1.return)) _e.call(charts_1);
                        }
                        finally { if (e_2) throw e_2.error; }
                        return [7 /*endfinally*/];
                    case 18:
                        this.dashboard.bind(controls.map(function (x) { return x.component.wrapper; }), charts.map(function (x) { return x.component.wrapper; }));
                        _f.label = 19;
                    case 19:
                        _b = _a.next();
                        return [3 /*break*/, 3];
                    case 20: return [3 /*break*/, 23];
                    case 21:
                        e_3_1 = _f.sent();
                        e_3 = { error: e_3_1 };
                        return [3 /*break*/, 23];
                    case 22:
                        try {
                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                        }
                        finally { if (e_3) throw e_3.error; }
                        return [7 /*endfinally*/];
                    case 23: return [2 /*return*/];
                }
            });
        });
    };
    GoogleChartsDashboardComponent.prototype.draw = function (value) {
        this.dataTable.init(value);
    };
    GoogleChartsDashboardComponent.prototype._draw = function () {
        this.dashboard.draw(this.dataTable.getDataTable());
    };
    GoogleChartsDashboardComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: GoogleChartsLoaderService }
    ]; };
    __decorate([
        Input()
    ], GoogleChartsDashboardComponent.prototype, "data", void 0);
    GoogleChartsDashboardComponent = __decorate([
        Component({
            selector: 'google-charts-dashboard',
            template: '<div></div>'
        })
    ], GoogleChartsDashboardComponent);
    return GoogleChartsDashboardComponent;
}());
export { GoogleChartsDashboardComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ29vZ2xlLWNoYXJ0cy1kYXNoYm9hcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmcyLWdvb2dsZS1jaGFydHMvIiwic291cmNlcyI6WyJsaWIvZ29vZ2xlLWNoYXJ0cy1kYXNoYm9hcmQvZ29vZ2xlLWNoYXJ0cy1kYXNoYm9hcmQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFVBQVUsRUFDVixNQUFNLEVBQ04sS0FBSyxHQUNOLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBSTVFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBZW5FO0lBU0Usd0NBQW1CLEVBQWMsRUFDZCxhQUF3QztRQUN6RCxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztRQUNiLElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxpREFBUSxHQUFSO1FBQUEsaUJBWUM7UUFYQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFFM0IsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQztZQUNmLElBQUksQ0FBQyxLQUFJLENBQUMsU0FBUyxFQUFFO2dCQUNuQixLQUFJLENBQUMsU0FBUyxHQUFHLElBQUkscUJBQXFCLENBQUMsS0FBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN0RCxLQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxVQUFDLEVBQU87b0JBQ2hELEtBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztnQkFDZixDQUFDLENBQUMsQ0FBQzthQUNKO1lBQ0QsS0FBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2QsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRVksNkNBQUksR0FBakI7Ozs7Ozs0QkFDRSxxQkFBTSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxFQUFDLFFBQVEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsRUFBQTs7d0JBQXhELFNBQXdELENBQUM7d0JBRXpELElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxNQUFNLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FDakQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7Ozs7d0JBRTlCLEtBQUEsU0FBQSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQTs7Ozt3QkFBbkIsQ0FBQzt3QkFDTixRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNoQixNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUVsQixJQUFJLENBQUMsQ0FBQyxRQUFRLFlBQVksS0FBSyxDQUFDLEVBQUU7NEJBQ2hDLFFBQVEsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO3lCQUN2Qjt3QkFFRCxJQUFJLENBQUMsQ0FBQyxNQUFNLFlBQVksS0FBSyxDQUFDLEVBQUU7NEJBQzlCLE1BQU0sR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO3lCQUNuQjs7Ozt3QkFFZSw0QkFBQSxTQUFBLFFBQVEsQ0FBQSxDQUFBOzs7O3dCQUFiLENBQUM7d0JBQ1YscUJBQU0sQ0FBQyxDQUFDLFNBQVMsQ0FBQyxVQUFVLEVBQUUsRUFBQTs7d0JBQTlCLFNBQThCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3QkFHakIsMEJBQUEsU0FBQSxNQUFNLENBQUEsQ0FBQTs7Ozt3QkFBWCxDQUFDO3dCQUNWLHFCQUFNLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLEVBQUE7O3dCQUF4QixTQUF3QixDQUFDO3dCQUNuQixJQUFJLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUM7d0JBQzlCLElBQUksSUFBSSxDQUFDLFNBQVMsS0FBSyxTQUFTLElBQUksSUFBSSxDQUFDLGFBQWEsS0FBSyxTQUFTLEVBQUU7NEJBQ3BFLE1BQU0sS0FBSyxDQUFDLHVEQUF1RDtnQ0FDdkQsK0JBQStCLENBQUMsQ0FBQzt5QkFDOUM7Ozs7Ozs7Ozs7Ozs7Ozs7O3dCQUdILElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBbkIsQ0FBbUIsQ0FBQyxFQUN0QyxNQUFNLENBQUMsR0FBRyxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQW5CLENBQW1CLENBQUMsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUU3RDtJQUVNLDZDQUFJLEdBQVgsVUFBWSxLQUE0QjtRQUN0QyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRU8sOENBQUssR0FBYjtRQUNFLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQztJQUNyRCxDQUFDOztnQkE5RHNCLFVBQVU7Z0JBQ0MseUJBQXlCOztJQVJsRDtRQUFSLEtBQUssRUFBRTtnRUFBNkM7SUFGMUMsOEJBQThCO1FBSjFDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSx5QkFBeUI7WUFDbkMsUUFBUSxFQUFFLGFBQWE7U0FDeEIsQ0FBQztPQUNXLDhCQUE4QixDQXdFMUM7SUFBRCxxQ0FBQztDQUFBLEFBeEVELElBd0VDO1NBeEVZLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImRlY2xhcmUgdmFyIGdvb2dsZTogYW55O1xuXG5pbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIE9uSW5pdCxcbiAgSW5wdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBHb29nbGVDaGFydHNMb2FkZXJTZXJ2aWNlIH0gZnJvbSAnLi4vZ29vZ2xlLWNoYXJ0cy1sb2FkZXIuc2VydmljZSc7XG5pbXBvcnQgeyBHb29nbGVDaGFydHNEYXRhVGFibGVJbnRlcmZhY2UgfSBmcm9tICcuLi9nb29nbGUtY2hhcnRzLWRhdGF0YWJsZSc7XG5pbXBvcnQgeyBHb29nbGVDaGFydHNDb250cm9sSW50ZXJmYWNlIH0gZnJvbSAnLi4vZ29vZ2xlLWNoYXJ0cy1jb250cm9sL2dvb2dsZS1jaGFydHMtY29udHJvbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgR29vZ2xlQ2hhcnRJbnRlcmZhY2UgfSBmcm9tICcuLi9nb29nbGUtY2hhcnQvZ29vZ2xlLWNoYXJ0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBHb29nbGVDaGFydHNEYXRhVGFibGUgfSBmcm9tICcuLi9nb29nbGUtY2hhcnRzLWRhdGF0YWJsZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR29vZ2xlQ2hhcnRzRGFzaGJvYXJkSW50ZXJmYWNlIGV4dGVuZHNcbiBHb29nbGVDaGFydHNEYXRhVGFibGVJbnRlcmZhY2Uge1xuICBiaW5kOiBbXG4gICAgR29vZ2xlQ2hhcnRzQ29udHJvbEludGVyZmFjZSB8IEdvb2dsZUNoYXJ0c0NvbnRyb2xJbnRlcmZhY2VbXSxcbiAgICBHb29nbGVDaGFydEludGVyZmFjZSB8IEdvb2dsZUNoYXJ0SW50ZXJmYWNlW11cbiAgXVtdO1xuICBjb21wb25lbnQ/OiBHb29nbGVDaGFydHNEYXNoYm9hcmRDb21wb25lbnQ7XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2dvb2dsZS1jaGFydHMtZGFzaGJvYXJkJyxcbiAgdGVtcGxhdGU6ICc8ZGl2PjwvZGl2PicsXG59KVxuZXhwb3J0IGNsYXNzIEdvb2dsZUNoYXJ0c0Rhc2hib2FyZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgcHVibGljIGRhdGE6IEdvb2dsZUNoYXJ0c0Rhc2hib2FyZEludGVyZmFjZTtcblxuICBwcml2YXRlIGVsOiBFbGVtZW50UmVmO1xuICBwcml2YXRlIGxvYWRlclNlcnZpY2U6IEdvb2dsZUNoYXJ0c0xvYWRlclNlcnZpY2U7XG4gIHB1YmxpYyBkYXNoYm9hcmQ6IGFueTtcbiAgcHVibGljIGRhdGFUYWJsZTogR29vZ2xlQ2hhcnRzRGF0YVRhYmxlO1xuXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZixcbiAgICAgICAgICAgICAgICAgICAgIGxvYWRlclNlcnZpY2U6IEdvb2dsZUNoYXJ0c0xvYWRlclNlcnZpY2UpIHtcbiAgICB0aGlzLmVsID0gZWw7XG4gICAgdGhpcy5sb2FkZXJTZXJ2aWNlID0gbG9hZGVyU2VydmljZTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuZGF0YS5jb21wb25lbnQgPSB0aGlzO1xuXG4gICAgdGhpcy5pbml0KCkudGhlbigoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMuZGF0YVRhYmxlKSB7XG4gICAgICAgIHRoaXMuZGF0YVRhYmxlID0gbmV3IEdvb2dsZUNoYXJ0c0RhdGFUYWJsZSh0aGlzLmRhdGEpO1xuICAgICAgICB0aGlzLmRhdGFUYWJsZS5kYXRhVGFibGVDaGFuZ2VkLnN1YnNjcmliZSgoZHQ6IGFueSkgPT4ge1xuICAgICAgICAgIHRoaXMuX2RyYXcoKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICB0aGlzLmRyYXcoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBpbml0KCkge1xuICAgIGF3YWl0IHRoaXMubG9hZGVyU2VydmljZS5sb2FkKHtwYWNrYWdlczogWydjb250cm9scyddIH0pO1xuXG4gICAgdGhpcy5kYXNoYm9hcmQgPSBuZXcgZ29vZ2xlLnZpc3VhbGl6YXRpb24uRGFzaGJvYXJkKFxuICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2RpdicpKTtcblxuICAgIGZvciAoY29uc3QgYiBvZiB0aGlzLmRhdGEuYmluZCkge1xuICAgICAgbGV0IGNvbnRyb2xzID0gYlswXTtcbiAgICAgIGxldCBjaGFydHMgPSBiWzFdO1xuXG4gICAgICBpZiAoIShjb250cm9scyBpbnN0YW5jZW9mIEFycmF5KSkge1xuICAgICAgICBjb250cm9scyA9IFtjb250cm9sc107XG4gICAgICB9XG5cbiAgICAgIGlmICghKGNoYXJ0cyBpbnN0YW5jZW9mIEFycmF5KSkge1xuICAgICAgICBjaGFydHMgPSBbY2hhcnRzXTtcbiAgICAgIH1cblxuICAgICAgZm9yIChjb25zdCBjIG9mIGNvbnRyb2xzKSB7XG4gICAgICAgIGF3YWl0IGMuY29tcG9uZW50LmVuc3VyZUluaXQoKTtcbiAgICAgIH1cblxuICAgICAgZm9yIChjb25zdCBjIG9mIGNoYXJ0cykge1xuICAgICAgICBhd2FpdCBjLmNvbXBvbmVudC5pbml0KCk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBjLmNvbXBvbmVudC5kYXRhO1xuICAgICAgICBpZiAoZGF0YS5kYXRhVGFibGUgIT09IHVuZGVmaW5lZCB8fCBkYXRhLmRhdGFTb3VyY2VVcmwgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHRocm93IEVycm9yKCdkYXRhVGFibGUgYW5kIGRhdGFTb3VyY2VVcmwgY2Fubm90IGJlIHNwZWNpZmllZCB3aGVuICcgK1xuICAgICAgICAgICAgICAgICAgICAgICdjaGFydCBpcyBkcmF3biBpbiBhIERhc2hib2FyZCcpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZGFzaGJvYXJkLmJpbmQoY29udHJvbHMubWFwKHggPT4geC5jb21wb25lbnQud3JhcHBlciksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNoYXJ0cy5tYXAoeCA9PiB4LmNvbXBvbmVudC53cmFwcGVyKSk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGRyYXcodmFsdWU/OiBHb29nbGVDaGFydEludGVyZmFjZSkge1xuICAgIHRoaXMuZGF0YVRhYmxlLmluaXQodmFsdWUpO1xuICB9XG5cbiAgcHJpdmF0ZSBfZHJhdygpIHtcbiAgICB0aGlzLmRhc2hib2FyZC5kcmF3KHRoaXMuZGF0YVRhYmxlLmdldERhdGFUYWJsZSgpKTtcbiAgfVxufVxuIl19